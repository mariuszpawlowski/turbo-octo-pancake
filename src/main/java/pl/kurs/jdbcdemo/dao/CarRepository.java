package jdbcdemo.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import jdbcdemo.domain.Car;
import jdbcdemo.domain.Person;

public class CarRepository {
Connection connection;
	
	private String createTableSql = "CREATE TABLE cars("
			+ "id INT GENERATED BY DEFAULT AS IDENTITY,"
			+ "brand VARCHAR(20),"
			+ "registration VARCHAR(10)"
			+ ")";
	
	private String insertSql = "INSERT INTO cars(brand,registration) VALUES (?,?)";
	private String updateSql = "UPDATE cars SET (brand, regstration) = (?,?) WHERE id=?";
	private String deleteSql = "DELETE FROM cars WHERE id=?";
	private String selectAllSql = "SELECT * FROM cars";
	
	private Statement createTable;
	private PreparedStatement insert;
	private PreparedStatement selectAll;
	private PreparedStatement update;
	private PreparedStatement delete;
	
	public CarRepository(){
		
		try {
			connection = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");
			createTable = connection.createStatement();
			insert = connection.prepareStatement(insertSql);
			update = connection.prepareStatement(updateSql);
			delete = connection.prepareStatement(deleteSql);
			selectAll = connection.prepareStatement(selectAllSql);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public List<Car> getAll(){
		List<Car> result = new ArrayList<Car>();
		try {
			ResultSet rs = selectAll.executeQuery();
			while(rs.next()){
				Car c = new Car();
				c.setId(rs.getInt("id"));
				c.setBrand(rs.getString("brand"));
				c.setRegistration(rs.getString("registation"));
				result.add(c);
			}
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
	}
	
	public void add(Car car){
		try{
			insert.setString(1, car.getBrand());
			insert.setString(2, car.getRegistration());
			insert.executeUpdate();
		}catch(SQLException ex){
			ex.printStackTrace();
		}
	}
	
	public void update(Car car) {

		try{
			update.setString(1, car.getBrand());
			update.setString(2, car.getRegistration());
			update.setInt(3, car.getId());
			update.executeUpdate();
		}catch(SQLException ex){
			ex.printStackTrace();
		}
	}
	
	public void delete(Person person) {

		try{
			delete.setInt(1, person.getId());
			delete.executeUpdate();
		}catch(SQLException ex){
			ex.printStackTrace();
		}
	}
	
	public void createTable(){
		try {
			
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while(rs.next()){
				if(rs.getString("TABLE_NAME").equalsIgnoreCase("cars")){
					tableExists=true;
					break;
				}
			}
			if(!tableExists)
				createTable.executeUpdate(createTableSql);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
}
